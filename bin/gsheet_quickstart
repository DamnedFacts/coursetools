#!/usr/bin/env python3

"""
Source: https://developers.google.com/sheets/api/quickstart/python
"""
from __future__ import print_function
import httplib2
import os
from courselib.config import config, load, dump

from apiclient import discovery
from oauth2client import client
from oauth2client import tools
from oauth2client.file import Storage

try:
    import argparse
    flags = argparse.ArgumentParser(parents=[tools.argparser]).parse_args()
except ImportError:
    flags = None

# If modifying these scopes, delete your previously saved credentials
# at ~/.credentials/sheets.googleapis.com-python-quickstart.json
SCOPES = 'https://www.googleapis.com/auth/spreadsheets.readonly'
CLIENT_SECRET_FILE = 'client_secret.json'
APPLICATION_NAME = 'Google Sheets API Python Quickstart'


def get_credentials():
    """Gets valid user credentials from storage.

    If nothing has been stored, or if the stored credentials are invalid,
    the OAuth2 flow is completed to obtain the new credentials.

    Returns:
        Credentials, the obtained credential.
    """
    home_dir = os.path.expanduser('~')
    credential_dir = os.path.join(home_dir, '.credentials')
    if not os.path.exists(credential_dir):
        os.makedirs(credential_dir)
    credential_path = os.path.join(credential_dir,
                                   'sheets.googleapis.com-python-quickstart.json')

    store = Storage(credential_path)
    credentials = store.get()
    if not credentials or credentials.invalid:
        flow = client.flow_from_clientsecrets(CLIENT_SECRET_FILE, SCOPES)
        flow.user_agent = APPLICATION_NAME
        if flags:
            credentials = tools.run_flow(flow, store, flags)
        else: # Needed only for compatibility with Python 2.6
            credentials = tools.run(flow, store)
        print('Storing credentials to ' + credential_path)
    return credentials

def main():
    """Shows basic usage of the Sheets API.

    Creates a Sheets API service object and prints the names and majors of
    students in a sample spreadsheet:
    https://docs.google.com/spreadsheets/d/1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms/edit
    """
    credentials = get_credentials()
    http = credentials.authorize(httplib2.Http())
    discoveryUrl = ('https://sheets.googleapis.com/$discovery/rest?'
                    'version=v4')
    service = discovery.build('sheets', 'v4', http=http,
                              discoveryServiceUrl=discoveryUrl)

    out = output_lab_tas(service)
    out_f = open("/Users/rich/Documents/Classes/University of Rochester/Teaching/csc161/docs/config/lab_tas.yaml", "w")
    out_f.write(out)
    out_f.close()

    out = output_workshop_leaders(service)
    out_f = open("/Users/rich/Documents/Classes/University of Rochester/Teaching/csc161/docs/config/workshop_leaders.yaml", "w")
    out_f.write(out)
    out_f.close()


def output_lab_tas(service):
    """ Lab TAs
    """
    spreadsheetId = '1ref0-sQYoQxhKHpdISkoDQ5Vu7k5Oaq6H7We7LxShb8'
    range_name = 'Sheet1!A1:H16'
    result = service.spreadsheets().values().get(
        spreadsheetId=spreadsheetId, range=range_name).execute()
    values = result.get('values', [])

    if not values:
        print('No data found.')
        return

    n = 1
    labs = {}

    for crn in config['registrar']['labs']:
        labs[crn] = f"lab{n}"
        n += 1

    n = 1
    for crn in config['registrar']['labs']:
        n += 1
        labs[crn] = []
        for row in values[2:]:
            try:
                section = int(values[0][3+row[3:].index("CONFIRMED")])
                if section == crn:
                    labs[crn].append({'name': f"{row[1]} {row[0]}",
                                      'email': f"{row[2].lower()}",
                                      'netid': f"{row[2].split('@')[0].lower()}"
                                      })
            except ValueError:
                pass
    return dump(labs)



def output_workshop_leaders(service):
    """ Workshop leaders
    """
    spreadsheetId = '1FaNGCFm60i3ZOBR8_osd73NcpArkpZrsPex6-QoCNbM'
    range_name = 'Sheet1!A1:O15'
    result = service.spreadsheets().values().get(
        spreadsheetId=spreadsheetId, range=range_name).execute()
    values = result.get('values', [])

    if not values:
        print('No data found.')
        return

    n = 1
    wksps = {}
    for crn in config['registrar']['workshops']:
          wksps[crn] = f"workshop{n}"
          n += 1

    n = 1
    for crn in config['registrar']['workshops']:
        n += 1
        for row in values[2:]:
            try:
                section = int(values[0][3+row[3:].index("CONFIRMED")])
                if section == crn:
                    wksps[crn] = {'name': f"{row[1]} {row[0]}",
                                       'email': f"{row[2].lower()}",
                                       'netid': f"{row[2].split('@')[0].lower()}",
                                       'superleader': False
                                  }
            except ValueError:
                pass
    return dump(wksps)

if __name__ == '__main__':
    main()
